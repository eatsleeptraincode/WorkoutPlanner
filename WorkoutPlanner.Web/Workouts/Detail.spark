<viewdata model="WorkoutPlanner.Web.Workouts.DetailWorkoutViewModel" />

<content:header>
    <Asset src="workout"/>

</content:header>

<content:main>

    <h2>${Model.Type + " " + Model.Phase}</h2>
    ${this.LinkTo(new PrintWorkoutViewModel{WorkoutId = Model.WorkoutId}).Text("Print")}
    
    <Form model="WorkoutPlanner.Web.Workouts.AddExerciseViewModel">
    <Input name="WorkoutId"/>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Exercise</th>
                <th>Sets</th>
                <th>Reps</th>
                <th>Tempo</th>
            </tr>
        </thead>
        <tbody>

            <var itemIndex="0"/>
            <tr each="var e in Model.Exercises">
                <td> 
                    ${this.InputFor(x => x.Exercises[itemIndex].Group).AddClass("input-mini")}
                </td>
                <td>${this.InputFor(x => x.Exercises[itemIndex].ExerciseId)}
                ${this.InputFor(x => x.Exercises[itemIndex].Exercise)}</td>
                <td>${this.InputFor(x => x.Exercises[itemIndex].Sets)}</td>
                <td>${this.InputFor(x => x.Exercises[itemIndex].Reps)}</td>
                <td>
                    ${this.InputFor(x => x.Exercises[itemIndex].Down).AddClass("input-mini")}/
                    ${this.InputFor(x => x.Exercises[itemIndex].Bottom).AddClass("input-mini")}/
                    ${this.InputFor(x => x.Exercises[itemIndex].Up).AddClass("input-mini")}/
                    ${this.InputFor(x => x.Exercises[itemIndex].Top).AddClass("input-mini")}
                </td>
                <set itemIndex="itemIndex+1"/>
            </tr>
        </tbody>
    </table>
    <input type="submit" class="btn btn-inverse" value="Save"/>
</Form>
</content:main>

<content:footer>
<script language="javascript">
    $('.autocomplete').bind("autocompleteChanged", function(target, value){
    var s = "[name='" + target.currentTarget.id.substring(0,20) + "Id']";
    $(s).val(value);
    });
  </script>
</content:footer>